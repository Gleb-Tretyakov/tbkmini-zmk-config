/*


    Copyright (c) 2023 The ZMK Contributors


    SPDX-License-Identifier: MIT
    */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define SYMB 2
#define ADJUST 3
#define QWERTY 4

&lt {
tapping-term-ms = <200>;
flavor = "tap-preferred";
};

&mt {
tapping-term-ms = <200>;
flavor = "tap-preferred";
};

/ {
behaviors {
mt_lctl_esc: mt_lctl_esc {
compatible = "zmk,behavior-hold-tap";
#binding-cells = <2>;
tapping-term-ms = <200>;
flavor = "tap-preferred";
bindings = <&kp>, <&kp>;
};

    mt_rsft_ent: mt_rsft_ent {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    dt_lang: dt_lang {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <300>;
        bindings = <&lang_switch>, <&to QWERTY>;
    };
};

macros {
    lang_switch: lang_switch {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_press &kp LGUI>,
                   <&macro_tap &kp SPACE>,
                   <&macro_release &kp LGUI>;
    };

    next_desktop: next_desktop {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_press &kp LCTRL>,
                   <&macro_tap &kp RIGHT>,
                   <&macro_release &kp LCTRL>;
    };

    prev_desktop: prev_desktop {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_press &kp LCTRL>,
                   <&macro_tap &kp LEFT>,
                   <&macro_release &kp LCTRL>;
    };

    next_tab: next_tab {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_press &kp LGUI &kp LALT>,
                   <&macro_tap &kp RIGHT>,
                   <&macro_release &kp LGUI &kp LALT>;
    };

    prev_tab: prev_tab {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&macro_press &kp LGUI &kp LALT>,
                   <&macro_tap &kp LEFT>,
                   <&macro_release &kp LGUI &kp LALT>;
    };
};

conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
        if-layers = <LOWER SYMB>;
        then-layer = <ADJUST>;
    };
};

keymap {
    compatible = "zmk,keymap";

    base_layer {
        bindings = <

&kp TAB     &kp B      &kp Y      &kp O      &kp U     &kp SQT           &kp MINUS  &kp L      &kp D      &kp W      &kp V      &kp Z
&mt_lctl_esc LCTRL ESC  &lt SYMB C  &kp I  &kp E  &kp A  &kp COMMA    &kp DOT    &kp H      &kp T      &kp S  &lt SYMB N  &kp Q
&kp UNDER   &kp G      &kp X      &kp J      &kp K     &kp SLASH         &kp SEMI   &kp R      &kp M      &kp F      &kp P    &mt_rsft_ent RSFT ENTER
&dt_lang  &lt LOWER SPACE  &kp LGUI         &kp RSFT  &lt LOWER SPACE &kp RALT
>;
};

    lower_layer {
        bindings = <

&trans      &trans     &kp C_NEXT &kp C_PP  &kp C_PREV &trans        &kp LBKT   &kp N7     &kp N8     &kp N9     &kp RBKT   &trans
&trans      &kp LGUI   &kp LALT   &prev_tab &next_tab  &trans        &kp PLUS   &kp N4     &kp N5     &kp N6     &kp MINUS  &trans
&bt BT_CLR  &bootloader &trans     &prev_desktop &next_desktop &trans &kp N0     &kp N1     &kp N2     &kp N3     &kp FSLH   &trans
&trans     &trans    &trans                    &trans     &trans     &trans
>;
};

    symbol_layer {
        bindings = <

&kp TAB    &kp SQT   &kp LT     &kp GT     &kp DQT    &kp PIPE         &kp AMPS   &kp AMPS   &kp LBKT   &kp RBKT   &kp PRCNT  &kp BSPC
&kp LGUI   &kp EXCL  &kp MINUS  &kp PLUS   &kp EQUAL  &kp HASH         &kp PIPE   &kp COLON  &kp LPAR   &kp RPAR   &kp QMARK  &kp GRAVE
&kp LSHFT  &kp CARET &kp FSLH   &kp STAR   &kp BSLH   &none            &kp TILDE  &kp DLLR   &kp LBRC   &kp RBRC   &kp AT     &kp RCTRL
&trans     &trans     &kp LGUI                     &kp RSFT   &trans     &trans
>;
};

    adjust_layer {
        bindings = <

&trans     &bt BT_CLR &trans     &trans     &trans     &trans        &trans     &kp C_VOL_UP &kp C_MUTE  &kp C_VOL_DN &trans     &trans
&trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans     &trans
&trans     &out OUT_TOG &trans   &trans     &trans     &trans        &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans     &trans
&bootloader &sys_reset &trans                 &trans     &sys_reset &bootloader
>;
};

    qwerty_layer {
        bindings = <

&kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P      &kp LBKT
&mt_lctl_esc LCTRL ESC &kp A    &kp S      &kp D      &kp F      &kp G    &kp H      &kp J      &kp K      &kp L      &kp SEMI   &kp SQT
&kp UNDER  &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp RBKT   &mt_rsft_ent RSFT ENTER
&to BASE  &lt LOWER SPACE  &kp LGUI          &kp RSFT   &lt LOWER SPACE  &kp RALT
>;
};
};
};
